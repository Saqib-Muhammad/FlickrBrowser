<resources>
    <!--<color name="primary">#FF9800</color>
    <color name="primary_dark">#F57C00</color>
    <color name="primary_light">#FFE0B2</color>
    <color name="accent">#FFEB3B</color>
    <color name="primary_text">#212121</color>
    <color name="secondary_text">#757575</color>
    <color name="icons">#212121</color>
    <color name="divider">#BDBDBD</color>-->     <!--perfectly acceptable-->

   <!-- <color name="primary">#009688</color>
    <color name="primary_dark">#00796B</color>
    <color name="primary_light">#B2DFDB</color>
    <color name="accent">#FF5722</color>
    <color name="primary_text">#212121</color>
    <color name="secondary_text">#757575</color>
    <color name="icons">#FFFFFF</color>
    <color name="divider">#BDBDBD</color>-->

    <color name="primary">@color/md_teal_500</color>
    <color name="primary_dark">@color/md_teal_700</color>
    <color name="primary_light">@color/md_teal_100</color>
    <color name="accent">@color/md_deep_orange_500</color>
    <color name="primary_text">@color/md_grey_900</color>
    <color name="secondary_text">@color/md_grey_600</color>
    <color name="icons">@color/md_white_1000</color>
    <color name="divider">@color/md_grey_400</color>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/primary</item>
<!--    <item name="android:colorPrimary">@color/primary</item>-->

        <item name="colorPrimaryDark">@color/primary_dark</item>
        <item name="colorAccent">@color/accent</item>
        <item name="android:textColorSecondary">@color/secondary_text</item>
        <item name="android:icon">@color/icons</item>
        <item name="android:windowBackground">@color/primary_light</item>
<!--    <item name="windowBackground">@color/primary_light</item>-->
        <item name="cardBackgroundColor">@color/primary</item>
    </style>

    <style name="AppTheme.NoActionBar">
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
    </style>

    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />

    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />
</resources>

<!--
android colon colorPrimary requires API level 21, and the current min is 17.
    Now that's very informative.
    Android colon colorPrimary exists in the Android framework, but only in Lollipop and above,
    in other words, API 21 and above. Now Material Design was introduced with Android Lollipop, and the material
    design attributes, like color primary, didn't exist in the earlier versions of Android.
    targeting API 17, the color primary attribute won't exist in the Android framework for all the versions that
    our app could run on, and consequently we're getting that error.
    Now the support libraries provide material design attributes on earlier versions of Android.
    So the attributes won't be fetched from the framework, and when we use the support libraries, they'll exist
    in the app's namespace, and therefore we can't use the android colon prefix.-->

<!--Now you can see over here, colorPrimary. On the right hand side
    it says added in API level 21. Now code that targets API 21 and above can use the framework color primary
    attribute, and because that's used by framework code it'll work. But code that targets API
    levels before 21, will actually be using AppCompat, and other support libraries such as com dot
    Android dot support colon design.
    Now the code in those libraries will use the color primary attribute that they designed, and therefore
    the android colon namespace isn't used.
    Now while I've got this page -->

<!--Let's also check out text color secondary, so textColorSecondary,
    this one here, and I used command f or control f to actually search for that. And you can see this was added
    in API level 1, and that means it isn't provided by the support libraries, because it exists in all versions
    of Android.
    It's been present literally in every version of the Android framework since the very beginning.
    Now if that's the case, we need to use the android colon namespace when we want to use this attribute.
    Now the same should be true of window background,
    so I'm going to do a search for that, window
    Background,
    and you can see over here that it has been also added an API level one.-->

<!--android:windowBackground and android:textColorSecondary, are using the android colon namespace.
    They come from Android itself, regardless of the API level that the code's running on.
    So that's why we're prefixing those with Android colon.
    So to summarize all of that,-->

<!--Alright so we can also change the colour of the navigation bar for API 21 and above. Now Android-->
